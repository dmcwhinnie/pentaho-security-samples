<?xml version="1.0" encoding="UTF-8"?>

<!--+
  | Application context containing FilterChainProxy.
  +-->
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:pen="http://www.pentaho.com/schema/pentaho-system"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
                           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd
                           http://www.pentaho.com/schema/pentaho-system http://www.pentaho.com/schema/pentaho-system.xsd" 
       default-lazy-init="true">

  <!-- ======================== FILTER CHAIN ======================= -->
  <!--
      if you wish to use channel security, add "channelProcessingFilter," in
      front of "httpSessionContextIntegrationFilter" in the list below
  -->
  <bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy">
    <constructor-arg>
      <util:list>
        <sec:filter-chain pattern="/webservices/**" filters="securityContextHolderAwareRequestFilterForWS,httpSessionPentahoSessionContextIntegrationFilter,httpSessionContextIntegrationFilter,samlMetadataGeneratorFilter,samlWebSSOProcessingFilter,basicProcessingFilter,anonymousProcessingFilter,exceptionTranslationFilterForWS,filterInvocationInterceptorForWS" />
        <sec:filter-chain pattern="/api/**" filters="securityContextHolderAwareRequestFilterForWS,httpSessionPentahoSessionContextIntegrationFilter,httpSessionContextIntegrationFilter,samlMetadataGeneratorFilter,samlWebSSOProcessingFilter,basicProcessingFilter,requestParameterProcessingFilter,anonymousProcessingFilter,exceptionTranslationFilterForWS,filterInvocationInterceptorForWS" />
        <sec:filter-chain pattern="/plugin/**" filters="securityContextHolderAwareRequestFilterForWS,httpSessionPentahoSessionContextIntegrationFilter,httpSessionContextIntegrationFilter,samlMetadataGeneratorFilter,samlWebSSOProcessingFilter,basicProcessingFilter,requestParameterProcessingFilter,anonymousProcessingFilter,exceptionTranslationFilterForWS,filterInvocationInterceptorForWS" />
        <sec:filter-chain pattern="/**" filters="securityContextHolderAwareRequestFilter,httpSessionPentahoSessionContextIntegrationFilter,httpSessionContextIntegrationFilter,httpSessionReuseDetectionFilter,logoutFilter,samlLogoutFilter,samlSingleLogoutFilter,samlMetadataGeneratorFilter,samlWebSSOProcessingFilter,authenticationProcessingFilter,basicProcessingFilter,requestParameterProcessingFilter,anonymousProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptor" />
      </util:list>
    </constructor-arg>
  </bean>


  <bean id="filterInvocationInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
    <property name="authenticationManager" ref="authenticationManager" />
    <property name="accessDecisionManager" ref="httpRequestAccessDecisionManager" />

    <!-- allow anyone to see the wsdl of various services -->
    <!--
        Note - the "Nobody" below is saying that resource URLs with those
        patterns not be available through a web call.
    -->
    <property name="securityMetadataSource">
      <!-- http://stackoverflow.com/questions/30099851/spring-security-samples-preauth-xml-example-fails-to-run#answer-30105317 -->
      <sec:filter-security-metadata-source request-matcher="ciRegex" use-expressions="false">
        <sec:intercept-url pattern="\A/content/common-ui/resources/web/(.+/)*.+\.js.*\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/.*require-cfg.js.*\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/.*require-js-cfg.js.*\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/content/common-ui/resources/web/require.js.*\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/content/common-ui/resources/web/require-cfg.js.*\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/content/data-access/resources/gwt/.*css\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/webcontext.js.*\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/content/common-ui/resources/web/cache/cache-service.js.*\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/cacheexpirationservice.*\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/js/theme.*\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/content/common-ui/resources/themes/.*\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/content/common-ui/resources/web/dojo/djconfig.js.*\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/content/common-ui/resources/web/angular-directives/angular-directives.css\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/content/pentaho-mobile/resources/.*\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/docs/.*\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/mantlelogin/.*\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/mantle/mantleloginservice/*\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/mantle/.*\Z" access="Authenticated" />
        <sec:intercept-url pattern="\A/welcome/.*\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/public/.*\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/login.*\Z" access="Authenticated" />
        <sec:intercept-url pattern="\A/ping/alive.gif.*\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/j_spring_security_check.*\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/getimage.*\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/getresource.*\Z" access="Anonymous,Authenticated" />
        <sec:intercept-url pattern="\A/admin.*\Z" access="Admin" />
        <sec:intercept-url pattern="\A/auditreport.*\Z" access="Admin" />
        <sec:intercept-url pattern="\A/auditreportlist.*\Z" access="Admin" />
        <sec:intercept-url pattern="\A/versioncontrol.*\Z" access="Admin" />
        <sec:intercept-url pattern="\A/propertieseditor.*\Z" access="Admin" />
        <sec:intercept-url pattern="\A/propertiespanel.*\Z" access="Admin" />
        <sec:intercept-url pattern="\A/subscriptionadmin.*\Z" access="Admin" />
        <sec:intercept-url pattern="\A/resetrepository.*\Z" access="Admin" />
        <sec:intercept-url pattern="\A/viewaction.*solution.admin.*\Z" access="Admin" />
        <sec:intercept-url pattern="\A/scheduleradmin.*\Z" access="Admin" />
        <sec:intercept-url pattern="\A/publish.*\Z" access="Admin" />
        <sec:intercept-url pattern="\A/logout.*\Z" access="Anonymous" />
        <sec:intercept-url pattern="\A/solutionrepositoryservice.*component=delete.*solution=system.*\Z" access="Nobody" />
        <sec:intercept-url pattern="\A/solutionrepositoryservice.*solution=system.*component=delete.*\Z" access="Nobody" />
        <sec:intercept-url pattern=".*system.*pentaho.xml.*" access="Nobody" />
        <sec:intercept-url pattern=".*system.*applicationcontext.*.xml.*" access="Nobody" />
        <sec:intercept-url pattern=".*system.*pentahoobjects.spring.xml.*" access="Nobody" />
        <sec:intercept-url pattern=".*system.*pentahosystemconfig.xml.*" access="Nobody" />
        <sec:intercept-url pattern=".*system.*adminplugins.xml.*" access="Nobody" />
        <sec:intercept-url pattern=".*system.*plugin.properties.*" access="Nobody" />
        <sec:intercept-url pattern=".*system.*sessionstartupactions.xml.*" access="Nobody" />
        <sec:intercept-url pattern=".*system.*systemlisteners.xml.*" access="Nobody" />
        <sec:intercept-url pattern=".*system.*hibernate.*" access="Nobody" />
        <sec:intercept-url pattern=".*system.*birt/.*" access="Nobody" />
        <sec:intercept-url pattern=".*system.*dialects/.*" access="Nobody" />
        <sec:intercept-url pattern=".*system.*google/.*" access="Nobody" />
        <sec:intercept-url pattern=".*system.*jasperreports/.*" access="Nobody" />
        <sec:intercept-url pattern=".*system.*kettle/.*" access="Nobody" />
        <sec:intercept-url pattern=".*system.*logs/.*" access="Nobody" />
        <sec:intercept-url pattern=".*system.*mondrian/.*" access="Nobody" />
        <sec:intercept-url pattern=".*system.*quartz/.*" access="Nobody" />
        <sec:intercept-url pattern=".*system.*simple-jndi/.*" access="Nobody" />
        <sec:intercept-url pattern=".*system.*smtp-email/.*" access="Nobody" />
        <sec:intercept-url pattern=".*system.*ui/.*" access="Nobody" />
        <sec:intercept-url pattern=".*system.*\.\./.*" access="Nobody" />
        <sec:intercept-url pattern="\A/.*\Z" access="Authenticated" />
      </sec:filter-security-metadata-source>
    </property>
  </bean>

  <!--
      ===================== HTTP REQUEST SECURITY ====================
  -->
  <!-- overridden from applicationContext-spring-security.xml -->
  <bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
    <constructor-arg ref="samlAuthenticationFilterEntryPoint"/>
    <property name="accessDeniedHandler">
      <bean class="org.springframework.security.web.access.AccessDeniedHandlerImpl" />
    </property>
  </bean>

  <!-- overridden from applicationContext-spring-security.xml -->
  <bean id="exceptionTranslationFilterForWS" class="org.springframework.security.web.access.ExceptionTranslationFilter">
    <constructor-arg ref="samlAuthenticationFilterEntryPoint"/>
    <property name="accessDeniedHandler">
      <bean class="org.springframework.security.web.access.AccessDeniedHandlerImpl" />
    </property>
  </bean>

  <!-- overridden from applicationContext-spring-security.xml -->
  <bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
    <constructor-arg value="/logout.jsp" />
    <!-- URL redirected to after logout -->
    <constructor-arg>
      <util:list>
        <bean class="org.pentaho.platform.web.http.security.PentahoLogoutHandler" />
        <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
      </util:list>
    </constructor-arg>
    <property name="filterProcessesUrl" value="/platform/logout" />
  </bean>

  <!-- ================================= -->
  <!--   SPRING-SECURITY-SAML FILTERS    -->
  <!-- ================================= -->

  <pen:bean id="samlAuthenticationFilterEntryPoint" class="org.springframework.security.web.AuthenticationEntryPoint">
    <pen:attributes><pen:attr key="providerName" value="saml.authentication.entry.point"/></pen:attributes>
  </pen:bean>

  <pen:bean id="samlWebSSOProcessingFilter" class="javax.servlet.Filter">
    <pen:attributes><pen:attr key="providerName" value="saml.filter.websso.processing"/></pen:attributes>
  </pen:bean>

  <pen:bean id="samlWebSSOHoKProcessingFilter" class="javax.servlet.Filter">
    <pen:attributes><pen:attr key="providerName" value="saml.filter.websso.hok.processing"/></pen:attributes>
  </pen:bean>

  <pen:bean id="samlMetadataGeneratorFilter" class="javax.servlet.Filter">
    <pen:attributes><pen:attr key="providerName" value="saml.filter.metadata.generator"/></pen:attributes>
  </pen:bean>

  <pen:bean id="samlLogoutFilter" class="javax.servlet.Filter">
    <pen:attributes><pen:attr key="providerName" value="saml.filter.logout"/></pen:attributes>
  </pen:bean>

  <pen:bean id="samlSingleLogoutFilter" class="javax.servlet.Filter">
    <pen:attributes><pen:attr key="providerName" value="saml.filter.single.logout"/></pen:attributes>
  </pen:bean>

</beans>
